// balls-insert-start
#define macro SKIM(z0) = takes(0) returns(0) {
    // takes:                      []
    0x4                         // [0x4]
    calldataload                // [skimmer]
    dup1                        // [skimmer, skimmer]
    [TOKEN1]                    // [skimmer, skimmer, TOKEN1]
    [PACKED_RESERVE_INFO]       // [skimmer, skimmer, TOKEN1, PACKED_RESERVE_INFO]
    LOCK(<z0>)                  // [skimmer, skimmer, TOKEN1, PACKED_RESERVE_INFO]
    sload                       // [skimmer, skimmer, TOKEN1, packedReserveSlot]
    dup1                        // [skimmer, skimmer, TOKEN1, packedReserveSlot, packedReserveSlot]
    GET_RESERVE0()              // [skimmer, skimmer, TOKEN1, packedReserveSlot, reserve0]
    swap1                       // [skimmer, skimmer, TOKEN1, reserve0, packedReserveSlot]
    GET_RESERVE1()              // [skimmer, skimmer, TOKEN1, reserve0, reserve1]
    address                     // [skimmer, skimmer, TOKEN1, reserve0, reserve1, address()]
    [TOKEN0]                    // [skimmer, skimmer, TOKEN1, reserve0, reserve1, address(), TOKEN0]
    BALANCE_OF(<z0>)            // [skimmer, skimmer, TOKEN1, reserve0, reserve1, token0Balance]
    swap2                       // [skimmer, skimmer, TOKEN1, token0Balance, reserve1, reserve0]
    address                     // [skimmer, skimmer, TOKEN1, token0Balance, reserve1, reserve0, address()]
    [TOKEN1]                    // [skimmer, skimmer, TOKEN1, token0Balance, reserve1, reserve0, address(), TOKEN1]
    BALANCE_OF(<z0>)            // [skimmer, skimmer, TOKEN1, token0Balance, reserve1, reserve0, token1Balance]
    swap3                       // [skimmer, skimmer, TOKEN1, token1Balance, reserve1, reserve0, token0Balance]
    SAFE_SUB(<z0>)              // [skimmer, skimmer, TOKEN1, token1Balance, reserve1, skim0]
    swap2                       // [skimmer, skimmer, TOKEN1, skim0, reserve1, token1Balance]
    SAFE_SUB(<z0>)              // [skimmer, skimmer, TOKEN1, skim0, skim1]
    swap4                       // [skim1, skimmer, TOKEN1, skim0, skimmer]
    [TOKEN0]                    // [skim1, skimmer, TOKEN1, skim0, skimmer, TOKEN0]
    ERC20_TRANSFER(<z0>)        // [skim1, skimmer, TOKEN1]
    ERC20_TRANSFER(<z0>)        // []
    UNLOCK()                    // []
    stop                        // []
    // returns:                    []
}
// balls-insert-end