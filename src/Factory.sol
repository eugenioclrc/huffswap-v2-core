// SPDX-License-Identifier: MIT
pragma solidity 0.8.25;

import {Ownable} from "solady/auth/Ownable.sol";
import {SafeTransferLib} from "solady/utils/SafeTransferLib.sol";
import {CREATE3} from "solady/utils/CREATE3.sol";

/**
 * @author taken from https://github.com/LatamSwap/latamswap-dex
 */
contract HuffSwapFactory is Ownable {
    using SafeTransferLib for address;

    error ErrZeroAddress();
    error ErrIdenticalAddress();
    error ErrPairExists();
    error ErrNativoMustBeDeployed();

    /// @dev Maps tokens to its pair
    mapping(address fromToken => mapping(address toToken => address pair)) public getPair;
    /// @dev Stores all created pairs
    address[] public allPairs;

    /// @dev Event emitted when a new pair is created
    event PairCreated(address indexed token0, address indexed token1, address pair, uint256 allPairsLength);

    /// @dev Initializes the owner of the contract
    constructor(address _owner) {
        _initializeOwner(_owner);
    }

    function getCreationCode(address token0, address token1) internal view returns (bytes memory r) {
        r = abi.encodePacked(
            hex"38600b3d39600b38033df33461200357343560e01c8063022c0d9f146101cd5780636a627842106100ea57806323b872dd10610095578063095ea7b310610065578063095ea7b31461078457806301ffc9a7146106b257806306fdde031461071757630902f1ac14610734576101c0565b806323b872dd146108ab5780631296ee62146107c857806318160ddd1461088d57630dfe1681146106de576101c0565b80634000aea0106100c5578063313ce5671461096c5780633177029f1461097557634000aea0146107c8576101c0565b80636a62784214610a465780635909c0d514610a0a57635a3d549314610a28576101c0565b8063bc25cf771061016057806389afcb441061013057806389afcb44146112325780636a62784214610a4657806370a082311461120957637464fc3d14611214576101c0565b8063bc25cf77146119ea57806395d89b4114611961578063a9059cbb1461197a5763ba9a7a5614611ff9576101c0565b8063d8fbe994106101a6578063c1d34b8914611bd0578063d21220a7146106f1578063cae9ca5114610975578063d8fbe99414611bd05763c45a015514610704576101c0565b8063dd62ed3e14611ceb5763fff6cae914611d02576101c0565b63d5cf065534526004601cfd5b602435807401000000000000000000000000000000000000000260027401000000000000000000000000000000000000000554106102125763ab143c0634526004601cfd5b6002740100000000000000000000000000000000000000055554806dffffffffffffffffffffffffffff16600435848173ffffffffffffffffffffffffffffffffffffffff60443516876060868660405286108860701c6dffffffffffffffffffffffffffff1698848c891761028f576342301c2334526004601cfd5b8060206040380360003960005114906020602038036000396000511417156102be5763290fa18834526004601cfd5b60e01c9a8911166102d65763bb55fd2734526004601cfd5b52828282602060403803600039600051821561032d5782828291906fa9059cbb00000000000000000000000034526014526034523460446010346020945af160013451141761032c576390b8ec1834526004601cfd5b5b5050508160206020380360003960005182156103845782828291906fa9059cbb00000000000000000000000034526014526034523460446010346020945af1600134511417610383576390b8ec1834526004601cfd5b5b505050608435156103ca5782828291601c9150336084360360846080376310d1e85c345260205260806080525036343434945af16103c957637fd1918d34526004601cfd5b5b505050306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa61040c57633dd8248734526004601cfd5b3451306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa61044d57633dd8248734526004601cfd5b3451918184909190038082039110348218021894828590919003808203911034821802189584848484929190936dffffffffffffffffffffffffffff85116dffffffffffffffffffffffffffff8511156104ae576335278d1234526004601cfd5b156104c0576335278d1234526004601cfd5b420363ffffffff168282821717156105d5577401000000000000000000000000000000000000000454818284866e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602740100000000000000000000000000000000000000035401740100000000000000000000000000000000000000035584846e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16020174010000000000000000000000000000000000000004555b50505081819060701b4260e01b1717740100000000000000000000000000000000000000025534526020527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1604034a18586861761063a5763098fb56134526004601cfd5b853452602052604435337fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822608034a394600302906103e80203926003029102620f424002926103e802030211610697576335b01a0f34526004601cfd5b60017401000000000000000000000000000000000000000555005b60043560e01c6336372b0781146301ffc9a782141781637d4c6ff5149163b0202a111417173452602034f35b6020604038036000396000513452602034f35b6020602038036000396000513452602034f35b6020606038036000396000513452602034f35b6f0f48756666537761702050616972563260203452602f52606034f35b74010000000000000000000000000000000000000002548060701c6dffffffffffffffffffffffffffff168160e01c916dffffffffffffffffffffffffffff166060838234528360205260405234f35b6020600134600435602435348183336020523452604034205552337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602034a35234f35b6020600173ffffffffffffffffffffffffffffffffffffffff600435166024358133823354908103908111156108055763f4d678b834526004601cfd5b3384604452557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206044a38154018155346020346060360134346388a7ca5c60e01b965a608060643360048c6044360360446064373452523360245252f1610875576385b1639434526004601cfd5b5114610888576385b1639434526004601cfd5b345234f35b60207401000000000000000000000000000000000000000054345234f35b600160443573ffffffffffffffffffffffffffffffffffffffff6024351673ffffffffffffffffffffffffffffffffffffffff600435168233826020523452604034208054908134191461091657828290810390811115610913576313be252b34526004601cfd5b81555b5050509091808254908103908111156109365763f4d678b834526004601cfd5b813452825582540182557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a33452602034f35b60203460123452f35b6020346001600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925602060246024358533602052345260403420868260245234602034604036013434637b04a2d060e01b966060604489604436036044604437345233600452525af16109f1576381cbe4db34526004601cfd5b5114610a04576381cbe4db34526004601cfd5b55a33452f35b60207401000000000000000000000000000000000000000354345234f35b60207401000000000000000000000000000000000000000454345234f35b6002740100000000000000000000000000000000000000055410610a715763ab143c0634526004601cfd5b6002740100000000000000000000000000000000000000055574010000000000000000000000000000000000000002548060e01c306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa610ae457633dd8248734526004601cfd5b3451306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa610b2557633dd8248734526004601cfd5b3451808460701c6dffffffffffffffffffffffffffff16946dffffffffffffffffffffffffffff169385858486929190936dffffffffffffffffffffffffffff85116dffffffffffffffffffffffffffff851115610b8a576335278d1234526004601cfd5b15610b9c576335278d1234526004601cfd5b420363ffffffff16828282171715610cb1577401000000000000000000000000000000000000000454818284866e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602740100000000000000000000000000000000000000035401740100000000000000000000000000000000000000035584846e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16020174010000000000000000000000000000000000000004555b50505081819060701b4260e01b1717740100000000000000000000000000000000000000025534526020527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1604034a184848490810390811115610d1c57632a2ab27834526004601cfd5b9290810390811115610d3557632a2ab27834526004601cfd5b92858574010000000000000000000000000000000000000001548015610f42578282028070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b582821c62010000019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c80910481119003818070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b582821c62010000019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8091048111900381811015610f3f5781818160050281019103740100000000000000000000000000000000000000005480158282029284928404141702610ebc5763ad251c2734526004601cfd5b0460206060380360003960005190348183837401000000000000000000000000000000000000000054810190811015610efc576335278d1234526004601cfd5b74010000000000000000000000000000000000000000555401835552347fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a35b50505b505050808202918183049115348218021814610f65576335278d1234526004601cfd5b7401000000000000000000000000000000000000000183833452602052337f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f604034a2557401000000000000000000000000000000000000000054806111105791808202918183049115348218021814610fe6576335278d1234526004601cfd5b8070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b582821c62010000019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c809104811190036103e8810393506103e834903481838374010000000000000000000000000000000000000000548101908110156110b2576335278d1234526004601cfd5b74010000000000000000000000000000000000000000555401835552347fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a36103e8106111095763bb55fd2734526004601cfd5b5050611170565b919392908290801582820292849284041417026111345763ad251c2734526004601cfd5b0492801582820292849284041417026111545763ad251c2734526004601cfd5b0481811090821802188061116f5763bb55fd2734526004601cfd5b5b803452600435903481838374010000000000000000000000000000000000000000548101908110156111a9576335278d1234526004601cfd5b74010000000000000000000000000000000000000000555401835552347fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a360017401000000000000000000000000000000000000000555602034f35b602060043554345234f35b60207401000000000000000000000000000000000000000154345234f35b7401000000000000000000000000000000000000000260027401000000000000000000000000000000000000000554106112735763ab143c0634526004601cfd5b60027401000000000000000000000000000000000000000555543054306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa6112ce57633dd8248734526004601cfd5b345190306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa61131057633dd8248734526004601cfd5b34518360701c6dffffffffffffffffffffffffffff16846dffffffffffffffffffffffffffff166004359560e01c9282827401000000000000000000000000000000000000000154801561154b578282028070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b582821c62010000019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c80910481119003818070ffffffffffffffffffffffffffffffffff1060071b81811c68ffffffffffffffffff1060061b1781811c64ffffffffff1060051b1781811c62ffffff1060041b1760b582821c62010000019160011c1b0260121c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c8082040160011c809104811190038181101561154857818181600502810191037401000000000000000000000000000000000000000054801582820292849284041417026114c55763ad251c2734526004601cfd5b0460206060380360003960005190348183837401000000000000000000000000000000000000000054810190811015611505576335278d1234526004601cfd5b74010000000000000000000000000000000000000000555401835552347fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a35b50505b5050507401000000000000000000000000000000000000000054809186801582820292849284041417026115865763ad251c2734526004601cfd5b049585801582820292849284041417026115a75763ad251c2734526004601cfd5b04938585176115bd5763749383ad34526004601cfd5b30349180345281817401000000000000000000000000000000000000000054037401000000000000000000000000000000000000000055549081039081111561160d5763f4d678b834526004601cfd5b81557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034a38486858860206040380360003960005191906fa9059cbb00000000000000000000000034526014526034523460446010346020945af1600134511417611681576390b8ec1834526004601cfd5b60206020380360003960005191906fa9059cbb00000000000000000000000034526014526034523460446010346020945af16001345114176116ca576390b8ec1834526004601cfd5b91306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa61170a57633dd8248734526004601cfd5b345191306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa61174c57633dd8248734526004601cfd5b3451938484929190936dffffffffffffffffffffffffffff85116dffffffffffffffffffffffffffff851115611789576335278d1234526004601cfd5b1561179b576335278d1234526004601cfd5b420363ffffffff168282821717156118b0577401000000000000000000000000000000000000000454818284866e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602740100000000000000000000000000000000000000035401740100000000000000000000000000000000000000035584846e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16020174010000000000000000000000000000000000000004555b50505081819060701b4260e01b1717740100000000000000000000000000000000000000025534526020527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1604034a1027401000000000000000000000000000000000000000155600174010000000000000000000000000000000000000005553452602052337f3e43e1de00e8a6bc1dfa3e950e6ade24c52e4a25de4dee7fb5affe918ad1e744604034a3604034f35b6b0b48554646535741502d563260203452602b52606034f35b60013473ffffffffffffffffffffffffffffffffffffffff60043516337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602034602435803354908103908111156119d95763f4d678b834526004601cfd5b33558086540186553452a352602034f35b600435806002740100000000000000000000000000000000000000055410611a195763ab143c0634526004601cfd5b600274010000000000000000000000000000000000000005557401000000000000000000000000000000000000000254806dffffffffffffffffffffffffffff169060701c6dffffffffffffffffffffffffffff16306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa611aad57633dd8248734526004601cfd5b345191306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa611aef57633dd8248734526004601cfd5b345190810390811115611b09576335278d1234526004601cfd5b9190810390811115611b22576335278d1234526004601cfd5b9260206040380360003960005191906fa9059cbb00000000000000000000000034526014526034523460446010346020945af1600134511417611b6c576390b8ec1834526004601cfd5b60206020380360003960005191906fa9059cbb00000000000000000000000034526014526034523460446010346020945af1600134511417611bb5576390b8ec1834526004601cfd5b60017401000000000000000000000000000000000000000555005b602073ffffffffffffffffffffffffffffffffffffffff6024351673ffffffffffffffffffffffffffffffffffffffff6004351660443580338360205234526040342080549081341914611c3b57828290810390811115611c38576313be252b34526004601cfd5b81555b5050508282835450909180825490810390811115611c605763f4d678b834526004601cfd5b81604452825582540182557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206044a390608060646388a7ca5c60e01b93602485346064360360646064375233600452525260203436606001343434955af1611cd1576385b1639434526004601cfd5b5114611ce4576385b1639434526004601cfd5b6001345234f35b602060243560043560205234526040342054345234f35b6002740100000000000000000000000000000000000000055410611d2d5763ab143c0634526004601cfd5b600274010000000000000000000000000000000000000005557401000000000000000000000000000000000000000254806dffffffffffffffffffffffffffff16908060701c6dffffffffffffffffffffffffffff169060e01c91306020604038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa611dc757633dd8248734526004601cfd5b345180611ddb5763bb55fd2734526004601cfd5b306020602038036000396000519060146f70a0823100000000000000000000000034525234602460106020935afa611e1a57633dd8248734526004601cfd5b34519081611e2f5763bb55fd2734526004601cfd5b929190936dffffffffffffffffffffffffffff85116dffffffffffffffffffffffffffff851115611e67576335278d1234526004601cfd5b15611e79576335278d1234526004601cfd5b420363ffffffff16828282171715611f8e577401000000000000000000000000000000000000000454818284866e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1602740100000000000000000000000000000000000000035401740100000000000000000000000000000000000000035584846e010000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16020174010000000000000000000000000000000000000004555b50505081819060701b4260e01b1717740100000000000000000000000000000000000000025534526020527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1604034a160017401000000000000000000000000000000000000000555005b6103e83452602034f35b636fb1b0e96000526004601cfd",
            abi.encode(address(this), token0, token1)
        );
    }

    /// @dev Returns the total number of pairs.
    /// @return Total number of pairs.
    function allPairsLength() external view returns (uint256) {
        return allPairs.length;
    }

    /**
     * @dev Creates a new pair with two tokens.
     * @param tokenA The address of the first token.
     * @param tokenB The address of the second token.
     * @return pair The address of the newly created pair.
     * @notice Tokens must be different and not already have a pair.
     */
    function createPair(address tokenA, address tokenB) external returns (address pair) {
        // @dev sortTokens will revert if any address is 0 or address are identical
        (address token0, address token1) = sortTokens(tokenA, tokenB);
        if (getPair[token0][token1] != address(0)) revert ErrPairExists(); // single check is sufficient

        bytes memory creationCode = getCreationCode(token0, token1);

        pair = CREATE3.deploy(keccak256(abi.encodePacked(token0, token1)), creationCode, 0);

        getPair[token0][token1] = pair;
        getPair[token1][token0] = pair; // populate mapping in the reverse direction
        allPairs.push(pair);
        emit PairCreated(token0, token1, pair, allPairs.length);
    }

    /**
     * @dev Allows the owner to withdraw the entire balance of a specific token.
     * @param token The token to withdraw.
     * @param to The recipient address.
     */
    function withdraw(address token, address to) external onlyOwner {
        token.safeTransferAll(to);
    }

    /**
     * @dev Allows the owner to withdraw a specified amount of a specific token.
     * @param token The token to withdraw.
     * @param to The recipient address.
     * @param amount The amount of tokens to withdraw.
     */
    function withdraw(address token, address to, uint256 amount) external onlyOwner {
        token.safeTransfer(to, amount);
    }

    // returns sorted token addresses, used to handle return values from pairs sorted in this order
    function sortTokens(address tokenA, address tokenB) internal pure returns (address token0, address token1) {
        if (tokenA == tokenB) revert ErrIdenticalAddress();
        (token0, token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);
        if (token0 == address(0)) revert ErrZeroAddress();
    }
}
