extern GET_SLOT_FROM_KEYS(z0) stack(2, 1) reads(CONTROL_FLOW) writes(MEMORY)
extern SAFE_SUB_ERR(z0, err) stack(2, 1)

const _TRANSFER_EVENT_SIGNATURE
const ADDRESS_MASK

fn BALANCE_OF<z0>() -> () {
    owner = calldataload(0x04)
    ownerBalance = sload(owner)
    mstore(z0, ownerBalance)
    return(z0, 0x20)
}

fn TRANSFER<z0>() -> () {
    to = and(calldataload(0x04), ADDRESS_MASK)
    amount = calldataload(0x24)

    senderBalance = sload(caller())
    
    // error InsufficientBalance()
    newSenderBalance = SAFE_SUB_ERR<z0, 0xf4d678b8>(senderBalance, amount)
    sstore(caller(), newSenderBalance)

    // impossible to overflow, total supply is 2^256 - 1, otherwise it would rever on mint while updating total supply
    sstore(to, add(sload(to), amount))

    mstore(z0, amount)
    log3(z0, 0x20, _TRANSFER_EVENT_SIGNATURE, caller(), to)

    mstore(z0, 0x01)
    return(z0, 0x20)
}

