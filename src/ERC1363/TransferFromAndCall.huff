// balls-insert-start
#define macro TRANSFER_FROM_AND_CALL(z0) = takes(0) returns(0) {
    // takes:                      []
    0x20                        // [0x20]
    [ADDRESS_MASK]              // [0x20, ADDRESS_MASK]
    0x24                        // [0x20, ADDRESS_MASK, 0x24]
    calldataload                // [0x20, ADDRESS_MASK, calldataload(0x24)]
    and                         // [0x20, to]
    [ADDRESS_MASK]              // [0x20, to, ADDRESS_MASK]
    0x4                         // [0x20, to, ADDRESS_MASK, 0x4]
    calldataload                // [0x20, to, ADDRESS_MASK, calldataload(0x4)]
    and                         // [0x20, to, from]
    0x44                        // [0x20, to, from, 0x44]
    calldataload                // [0x20, to, from, amount]
    dup1                        // [0x20, to, from, amount, amount]
    caller                      // [0x20, to, from, amount, amount, caller()]
    dup4                        // [0x20, to, from, amount, amount, caller(), from]
    _USE_ALLOWANCE(<z0>)        // [0x20, to, from, amount]
    dup3                        // [0x20, to, from, amount, to]
    dup3                        // [0x20, to, from, amount, to, from]
    dup4                        // [0x20, to, from, amount, to, from, from]
    sload                       // [0x20, to, from, amount, to, from, fromBalance]
    pop                         // [0x20, to, from, amount, to, from]
    _TRANSFER_FROM(<z0>, 0x44)  // [0x20, to, from]
    _TRANSFER_FROM_HOOK(<z0>)   // [0x20]
    0x1                         // [0x20, 0x1]
    <z0>                        // [0x20, 0x1, z0]
    mstore                      // [0x20]
    <z0>                        // [0x20, z0]
    return                      // []
    // returns:                    []
}
// balls-insert-end