// balls-insert-start
#define macro _DO_TRANSFER_FROM_CALL(z0) = takes(2) returns(0) {
    // takes:                      [shiftedFunctionSig, to]
    0x20                        // [shiftedFunctionSig, to, 0x20]
    <z0>                        // [shiftedFunctionSig, to, 0x20, z0]
    calldatasize                // [shiftedFunctionSig, to, 0x20, z0, calldatasize()]
    0x60                        // [shiftedFunctionSig, to, 0x20, z0, calldatasize(), 0x60]
    add                         // [shiftedFunctionSig, to, 0x20, z0, size]
    <z0>                        // [shiftedFunctionSig, to, 0x20, z0, size, z0]
    <z0>                        // [shiftedFunctionSig, to, 0x20, z0, size, z0, z0]
    <z0>                        // [shiftedFunctionSig, to, 0x20, z0, size, z0, z0, z0]
    swap6                       // [shiftedFunctionSig, z0, 0x20, z0, size, z0, z0, to]
    gas                         // [shiftedFunctionSig, z0, 0x20, z0, size, z0, z0, to, gas()]
    call                        // [shiftedFunctionSig, z0, callOk]
    REQUIRE(<z0>, 0x85b16394)   // [shiftedFunctionSig, z0]
    mload                       // [shiftedFunctionSig, ret]
    eq                          // [eq(ret, shiftedFunctionSig)]
    REQUIRE(<z0>, 0x85b16394)   // []
    // returns:                    []
}

#define macro _TRANSFER_FROM_HOOK(z0) = takes(2) returns(0) {
    // takes:                      [to, from]
    swap1                       // [from, to]
    0x80                        // [from, to, 0x80]
    0x64                        // [from, to, 0x80, 0x64]
    [SIG_onTransferReceived]    // [from, to, 0x80, 0x64, SIG_onTransferReceived]
    0xe0                        // [from, to, 0x80, 0x64, SIG_onTransferReceived, 0xe0]
    shl                         // [from, to, 0x80, 0x64, shiftedFunctionSig]
    swap4                       // [shiftedFunctionSig, to, 0x80, 0x64, from]
    0x24                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24]
    dup6                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig]
    <z0>                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0]
    0x64                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0, 0x64]
    calldatasize                // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0, 0x64, calldatasize()]
    sub                         // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0, sub(calldatasize(), 0x64)]
    0x64                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0, sub(calldatasize(), 0x64), 0x64]
    0x64                        // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0, sub(calldatasize(), 0x64), 0x64, 0x64]
    calldatacopy                // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, shiftedFunctionSig, z0]
    mstore                      // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24]
    caller                      // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, caller()]
    0x4                         // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24, caller(), 0x4]
    mstore                      // [shiftedFunctionSig, to, 0x80, 0x64, from, 0x24]
    mstore                      // [shiftedFunctionSig, to, 0x80, 0x64]
    mstore                      // [shiftedFunctionSig, to]
    _DO_TRANSFER_FROM_CALL(<z0>)
    //                             []
    // returns:                    []
}
// balls-insert-end