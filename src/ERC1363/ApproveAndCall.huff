// balls-insert-start
#define macro APPROVE_AND_CALL(z0) = takes(0) returns(0) {
    // takes:                      []
    0x20                        // [0x20]
    <z0>                        // [0x20, z0]
    0x1                         // [0x20, z0, 0x1]
    0x4                         // [0x20, z0, 0x1, 0x4]
    calldataload                // [0x20, z0, 0x1, spender]
    caller                      // [0x20, z0, 0x1, spender, caller()]
    [_APPROVAL_EVENT_SIGNATURE]
    //                             [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE]
    0x20                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20]
    0x24                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24]
    0x24                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, 0x24]
    calldataload                // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount]
    dup6                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, spender]
    caller                      // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, spender, caller()]
    GET_SLOT_FROM_KEYS(<z0>)    // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot]
    dup7                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot, spender]
    dup3                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot, spender, amount]
    0x24                        // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot, spender, amount, 0x24]
    mstore                      // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot, spender]
    _APPROVE_HOOK(<z0>)         // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24, amount, slot]
    sstore                      // [0x20, z0, 0x1, spender, caller(), _APPROVAL_EVENT_SIGNATURE, 0x20, 0x24]
    log3                        // [0x20, z0, 0x1]
    <z0>                        // [0x20, z0, 0x1, z0]
    mstore                      // [0x20, z0]
    return                      // []
    // returns:                    []
}

#define macro _APPROVE_HOOK(z0) = takes(1) returns(0) {
    // takes:                      [spender]
    <z0>                        // [spender, z0]
    0x20                        // [spender, z0, 0x20]
    <z0>                        // [spender, z0, 0x20, z0]
    0x40                        // [spender, z0, 0x20, z0, 0x40]
    calldatasize                // [spender, z0, 0x20, z0, 0x40, calldatasize()]
    add                         // [spender, z0, 0x20, z0, add(calldatasize(), 0x40)]
    <z0>                        // [spender, z0, 0x20, z0, add(calldatasize(), 0x40), z0]
    <z0>                        // [spender, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0]
    [SIG_onApprovalReceived]    // [spender, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, SIG_onApprovalReceived]
    0xe0                        // [spender, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, SIG_onApprovalReceived, 0xe0]
    shl                         // [spender, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, shiftedFunctionSig]
    swap7                       // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender]
    0x60                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60]
    0x44                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44]
    dup10                       // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig]
    0x44                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, 0x44]
    calldatasize                // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, 0x44, calldatasize()]
    sub                         // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, sub(calldatasize(), 0x44)]
    0x44                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, sub(calldatasize(), 0x44), 0x44]
    0x44                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, sub(calldatasize(), 0x44), 0x44, 0x44]
    calldatacopy                // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig]
    <z0>                        // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, shiftedFunctionSig, z0]
    mstore                      // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44]
    caller                      // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, caller()]
    0x4                         // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44, caller(), 0x4]
    mstore                      // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, 0x60, 0x44]
    mstore                      // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender]
    gas                         // [shiftedFunctionSig, z0, 0x20, z0, add(calldatasize(), 0x40), z0, z0, spender, gas()]
    call                        // [shiftedFunctionSig, z0, callOk]
    _REQUIRE(<z0>, 0x81cbe4db)  // [shiftedFunctionSig, z0]
    mload                       // [shiftedFunctionSig, ret]
    eq                          // [eq(ret, shiftedFunctionSig)]
    _REQUIRE(<z0>, 0x81cbe4db)  // []
    // returns:                    []
}
// balls-insert-end