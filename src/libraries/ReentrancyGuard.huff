/// @notice adapted and modified from huffmate reentrancy guard

#define constant _UNLOCKED = 0x01
#define constant _LOCKED = 0x02


/// @title Lock
/// @notice Locks the contract to prevent reentrancy
#define macro LOCK(z0) = takes (0) returns (0) {
    [_LOCKED]                // [0x02]
    [LOCKED_SLOT]            // [locked_slot, 0x02]
    sload                    // [locked_slot_value, 0x02]
    lt                       // [locked_slot_value < 0x02]
    lock jumpi

    // Otherwise revert with re-entrancy
    0xab143c06 <z0> mstore // `Reentrancy()`.
    0x04 0x1c revert

    lock:
        [_LOCKED] [LOCKED_SLOT] sstore
}

/// @title Unlock
/// @notice Unlocks the contract
#define macro UNLOCK() = takes (0) returns (0) {
    [_UNLOCKED] [LOCKED_SLOT] sstore
}
