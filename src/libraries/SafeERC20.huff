// balls-insert-start
#define macro ERC20_BALANCE_OF(z0) = takes(2) returns(1) {
    // takes:                      [account, token]
    swap1                       // [token, account]
    0x14                        // [token, account, 0x14]
    0x70a08231000000000000000000000000
    //                             [token, account, 0x14, 0x70a08231000000000000000000000000]
    <z0>                        // [token, account, 0x14, 0x70a08231000000000000000000000000, z0]
    mstore                      // [token, account, 0x14]
    mstore                      // [token]
    0x20                        // [token, 0x20]
    <z0>                        // [token, 0x20, z0]
    0x24                        // [token, 0x20, z0, 0x24]
    0x10                        // [token, 0x20, z0, 0x24, 0x10]
    <z0>                        // [token, 0x20, z0, 0x24, 0x10, z0]
    swap5                       // [z0, 0x20, z0, 0x24, 0x10, token]
    gas                         // [z0, 0x20, z0, 0x24, 0x10, token, gas()]
    staticcall                  // [z0, success]
    _REQUIRE(<z0>, 0x3dd82487)  // [z0]
    mload                       // [amount]
    // returns:                    [amount]
}

#define macro ERC20_TRANSFER(z0) = takes(3) returns(0) {
    // takes:                      [amount, to, token]
    swap2                       // [token, to, amount]
    <z0>                        // [token, to, amount, z0]
    swap2                       // [token, z0, amount, to]
    0x14                        // [token, z0, amount, to, 0x14]
    0xa9059cbb000000000000000000000000
    //                             [token, z0, amount, to, 0x14, 0xa9059cbb000000000000000000000000]
    <z0>                        // [token, z0, amount, to, 0x14, 0xa9059cbb000000000000000000000000, z0]
    mstore                      // [token, z0, amount, to, 0x14]
    mstore                      // [token, z0, amount]
    0x34                        // [token, z0, amount, 0x34]
    mstore                      // [token, z0]
    0x44                        // [token, z0, 0x44]
    0x10                        // [token, z0, 0x44, 0x10]
    <z0>                        // [token, z0, 0x44, 0x10, z0]
    0x20                        // [token, z0, 0x44, 0x10, z0, 0x20]
    swap5                       // [0x20, z0, 0x44, 0x10, z0, token]
    gas                         // [0x20, z0, 0x44, 0x10, z0, token, gas()]
    call                        // [success]
    0x1                         // [success, 0x1]
    <z0>                        // [success, 0x1, z0]
    mload                       // [success, 0x1, mload(z0)]
    eq                          // [success, eq(mload(z0), 0x1)]
    or                          // [or(eq(mload(z0), 0x1), success)]
    _REQUIRE(<z0>, 0x90b8ec18)  // []
    // returns:                    []
}
// balls-insert-end